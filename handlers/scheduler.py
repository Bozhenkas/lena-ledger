"""–ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –ª–∏–º–∏—Ç–æ–≤ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""

from datetime import datetime
import asyncio
import pytz
from aiogram import Bot
from database.db_methods import get_expiring_limits, get_violated_limits

async def check_limits(bot: Bot):
    """performs daily limit checks and sends notifications for expiring and violated limits."""
    while True:
        # –ñ–¥–µ–º –¥–æ 8:00 –ø–æ –ú–°–ö
        moscow_tz = pytz.timezone('Europe/Moscow')
        now = datetime.now(moscow_tz)
        target_time = now.replace(hour=8, minute=0, second=0, microsecond=0)
        
        if now >= target_time:
            target_time = target_time.replace(day=target_time.day + 1)
        
        wait_seconds = (target_time - now).total_seconds()
        await asyncio.sleep(wait_seconds)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ–∫–∞—é—â–∏—Ö –ª–∏–º–∏—Ç–æ–≤
        expiring_limits = await get_expiring_limits()
        for limit in expiring_limits:
            await bot.send_message(
                limit["tg_id"],
                f"‚ö†Ô∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –∑–∞–≤—Ç—Ä–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç –ª–∏–º–∏—Ç!\n\n"
                f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {limit['category']}\n"
                f"–õ–∏–º–∏—Ç: {limit['limit_sum']}‚ÇΩ"
            )
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–Ω—ã—Ö –ª–∏–º–∏—Ç–æ–≤
        violated_limits = await get_violated_limits()
        for limit in violated_limits:
            await bot.send_message(
                limit["tg_id"],
                f"üö´ –í–Ω–∏–º–∞–Ω–∏–µ! –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤!\n\n"
                f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {limit['category']}\n"
                f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç: {limit['limit_sum']}‚ÇΩ\n"
                f"–¢–µ–∫—É—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: {limit['current_spent']}‚ÇΩ\n"
                f"–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ: {limit['current_spent'] - limit['limit_sum']}‚ÇΩ"
            )
        
        # –ñ–¥–µ–º 24 —á–∞—Å–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        await asyncio.sleep(24 * 60 * 60) 
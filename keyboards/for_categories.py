"""–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –¥–æ—Ö–æ–¥–æ–≤"""

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from math import ceil


async def get_add_category_kb() -> ReplyKeyboardMarkup:
    """—Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø—Ü–∏—è–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é."""
    kb = [
        [KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©Ô∏è")],
          ]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True)


async def get_categories_kb(categories: list, page: int = 0) -> InlineKeyboardMarkup:
    """—Å–æ–∑–¥–∞–µ—Ç –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –ø–æ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ."""
    items_per_page = 5
    total_pages = ceil(len(categories) / items_per_page)

    start_idx = page * items_per_page
    end_idx = min(start_idx + items_per_page, len(categories))
    current_categories = categories[start_idx:end_idx]

    kb = []
    for i, category in enumerate(current_categories, start=start_idx):
        kb.append([InlineKeyboardButton(text=f"üìä {category}", callback_data=f"category_{i}")])

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    nav_row = []
    if page > 0:
        nav_row.append(InlineKeyboardButton(text=f"‚¨ÖÔ∏è [{page + 1}/{total_pages}]", callback_data=f"page_{page - 1}"))
    if page < total_pages - 1:
        nav_row.append(InlineKeyboardButton(text=f"[{page + 1}/{total_pages}] ‚û°Ô∏è", callback_data=f"page_{page + 1}"))
    if nav_row:
        kb.append(nav_row)

    return InlineKeyboardMarkup(inline_keyboard=kb)


async def get_category_actions_kb(category_idx: int) -> InlineKeyboardMarkup:
    """—Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏."""
    kb = [
        [
            InlineKeyboardButton(text="üìã –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", callback_data=f"cat_trans_{category_idx}_0"),
            InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"cat_del_{category_idx}")
        ],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ö —Å–ø–∏—Å–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π", callback_data="back_to_categories")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=kb)


async def get_add_more_kb() -> ReplyKeyboardMarkup:
    """—Å–æ–∑–¥–∞–µ—Ç –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–ø—Ä–æ—Å–æ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é."""
    kb = [[KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë"), KeyboardButton(text="–•–≤–∞—Ç–∏—Ç")]]
    return ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, one_time_keyboard=True)
